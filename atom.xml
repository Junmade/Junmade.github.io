<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Junmade.github.io</id>
    <title>Junmade</title>
    <updated>2019-05-30T09:49:20.815Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Junmade.github.io"/>
    <link rel="self" href="https://Junmade.github.io/atom.xml"/>
    <subtitle>程序员最讨厌的四件事：写注释、写文档、别人不写注释、别人不写文档</subtitle>
    <logo>https://Junmade.github.io/images/avatar.png</logo>
    <icon>https://Junmade.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, Junmade</rights>
    <entry>
        <title type="html"><![CDATA[Oracle SQL]]></title>
        <id>https://Junmade.github.io/post/oracle-sql</id>
        <link href="https://Junmade.github.io/post/oracle-sql">
        </link>
        <updated>2019-05-30T01:23:20.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>
<p>查询所有表信息</p>
<pre><code class="language-sql">-- 所有用户与本用户
-- ALL_TAB_COMMENTS USER_TAB_COMMENTS
-- ALL_TAB_COLUMNS  USER_TAB_COLUMNS

-- 查询所有表信息
SELECT * FROM ALL_TAB_COMMENTS;
-- 查询所有表字段信息
SELECT * FROM ALL_TAB_COLUMNS;
-- 根据字段，查询出包含该字段的所有的表名
SELECT TABLE_NAME FROM ALL_TAB_COLUMNS WHERE COLUMN_NAME = '字段';
</code></pre>
</li>
<li>
<p>修改用户密码</p>
<pre><code class="language-sql">-- sqlplus / as sysdba
alter user 'username' identified by 'password';
</code></pre>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux命令]]></title>
        <id>https://Junmade.github.io/post/linux-ming-ling</id>
        <link href="https://Junmade.github.io/post/linux-ming-ling">
        </link>
        <updated>2019-05-29T02:07:13.000Z</updated>
        <content type="html"><![CDATA[<h5 id="1-scp">1. scp</h5>
<ul>
<li>
<p>文件</p>
<pre><code class="language-sh"> -- 上传本地文件到服务器
 scp /path/filename username@servername:/path;
 
 -- 从服务器上下载文件
 scp username@servername:/path/filename /path;
</code></pre>
</li>
<li>
<p>目录</p>
<pre><code class="language-shell">-- 上传目录到服务器
scp -r /path username@servername:/path
-- 从服务器下载目录
scp -r username@servername:/path /path
</code></pre>
</li>
</ul>
<hr>
<h4 id="2-tar">2. tar</h4>
<pre><code class="language-shell">-- 打包
tar -cvf *.tar filename

-- 解压
tar -xvf *.tar
</code></pre>
<pre><code class="language-sh">-- 查看多少位
getconf LONG_BIT
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux定时备份]]></title>
        <id>https://Junmade.github.io/post/linux-ding-shi-bei-fen</id>
        <link href="https://Junmade.github.io/post/linux-ding-shi-bei-fen">
        </link>
        <updated>2019-05-29T02:06:26.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>
<p>创建目录</p>
<pre><code class="language-shell">su - oracle
sqlplus / as sysdba

## 创建逻辑目录
create directory bakTemp as '/data/bak';
## 查看所有目录
select * from dba_directories;

quit;
</code></pre>
</li>
<li>
<p>备份数据</p>
<pre><code class="language-shell">expdp username/password schemas=schemas dumpfile=expdp.dmp DIRECTORY=bakTemp;
</code></pre>
</li>
<li>
<p>恢复数据</p>
<pre><code class="language-shell">impdp username/password schemas=schemas dumpfile=expdp.dmp DIRECTORY=bakTemp;
</code></pre>
</li>
<li>
<p>定时</p>
<pre><code class="language-shell">## 查看定时任务
crontab -l
## 删除定时任务
crontab -r
## 创建定时任务
crontab file.sh
crontab -e 命令
</code></pre>
</li>
<li>
<p>定时备份</p>
<pre><code class="language-shell">crontabCommand.sh

## 获取当前时间 YYYYmmdd
current_date=`date +%Y%m%d`
## 加载配置文件
## source /etc/profile
## 执行备份命令
expdp username/password schemas=schemas dumpfile=expdp.dmp DIRECTORY=bakTemp
</code></pre>
<pre><code class="language-shell">crontabRule.sh

## 每天晚上 2点执行任务
0 2 * * * /data/bak/crontabCommand.sh
</code></pre>
<pre><code class="language-shell">## 执行 crontab
crontab ./crontabRule.sh
</code></pre>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux安装 Redis]]></title>
        <id>https://Junmade.github.io/post/linux-an-zhuang-redis</id>
        <link href="https://Junmade.github.io/post/linux-an-zhuang-redis">
        </link>
        <updated>2019-05-29T02:03:34.000Z</updated>
        <content type="html"><![CDATA[<h5 id="获取资源并解压">获取资源并解压</h5>
<pre><code class="language-shell"># 获取资源
wget http://download.redis.io/releases/redis-4.0.8.tar.gz
# 解压
tar xzvf redis-4.0.8.tar.gz
</code></pre>
<h5 id="安装">安装</h5>
<pre><code class="language-sh">cd redis-4.0.8
make
cd src
make install
</code></pre>
<h5 id="部署">部署</h5>
<pre><code class="language-shell"># 创建目录
mkdir -p /usr/local/redis/bin
mkdir -p /usr/local/redis/etc

cp ./redis-4.0.8/redis.conf /usr/local/redis/etc
cp ./redis-4.0.8/src/redis-server /usr/local/redis/bin
</code></pre>
<pre><code class="language-shell">vi /usr/local/redis/etc/redis.conf
# 后台启动
daemonize yes
# 远程连接
# bind 127.0.0.1
# 关闭受保护
protected-mode no



# 开机自启动
vi /etc/rc.local
# 添加以下内容
/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf 
</code></pre>
<h5 id="启动">启动</h5>
<pre><code class="language-shell">/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf 
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux安装 MySQL5.7]]></title>
        <id>https://Junmade.github.io/post/linux-an-zhuang-mysql57</id>
        <link href="https://Junmade.github.io/post/linux-an-zhuang-mysql57">
        </link>
        <updated>2019-05-29T02:01:15.000Z</updated>
        <content type="html"><![CDATA[<p>​	1. 安装前，检测系统是否自带安装 MySQL，如果你系统有安装，那可以选择进行卸载;</p>
<pre><code class="language-shell">[root@centos-linux Desktop]# yum list installed | grep mysql
mysql-libs.i686          5.1.66-2.el6_3   @anaconda-CentOS-201303020136.i386/6.4
[root@centos-linux Desktop]# yum -y remove mysql-libs.i686

</code></pre>
<p>​	2. 下载 mysql5.7版本;</p>
<pre><code class="language-shell">[root@centos-linux Desktop]# wget dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm
</code></pre>
<pre><code>可能存在的问题：
</code></pre>
<pre><code class="language-shell">......
Unable to establish SSL connection.
[root@centos-linux Desktop]# yum install openssl
......
To connect to dev.mysql.com insecurely, use ‘--no-check-certificate’.
[root@centos-linux Desktop]# wget --no-check-certificate dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm
</code></pre>
<p>​	3.安装第一步下载的 rpm文件</p>
<pre><code class="language-shell">[root@centos-linux Desktop]# yum install mysql-community-release-el6-5.noarch.rpm
</code></pre>
<p>安装成功后，我们可以看到/etc/yum.repos.d/目录下增加了以下两个文件</p>
<pre><code class="language-shell">1 [root@centos-linux Desktop]# ls /etc/yum.repos.d
2 mysql-community-source.repo
3 mysql-community.repo
</code></pre>
<p>查看安装源是否可用</p>
<pre><code class="language-shell">[root@centos-linux Desktop]# yum repolist enabled | grep mysql
mysql-connectors-community MySQL Connectors Community       82
mysql-tools-community      MySQL Tools Community            59
mysql57-community-dmr      MySQL 5.7 Community Server Development  Milesto   183

</code></pre>
<pre><code class="language-shell"># 如不可用时，修改5.7中的 enabled=1，并在其他版本中改为 enabled=0
[root@centos-linux Desktop]# vi /etc/yum.repos.d/mysql-community.repo
-----

# Enable to use MySQL 5.5
[mysql55-community]
name=MySQL 5.5 Community Server
baseurl=http://repo.mysql.com/yum/mysql-5.5-community/el/6/$basearch/
enabled=0
gpgcheck=1
gpgkey=file:/etc/pki/rpm-gpg/RPM-GPG-KEY-mysql

# Enable to use MySQL 5.6
[mysql56-community]
name=MySQL 5.6 Community Server
baseurl=http://repo.mysql.com/yum/mysql-5.6-community/el/6/$basearch/
enabled=0
gpgcheck=1
gpgkey=file:/etc/pki/rpm-gpg/RPM-GPG-KEY-mysql

# Note: MySQL 5.7 is currently in development. For use at your own risk.
# Please read with sub pages: https://dev.mysql.com/doc/relnotes/mysql/5.7/en/
[mysql57-community-dmr]
name=MySQL 5.7 Community Server Development Milestone Release
baseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/6/$basearch/
enabled=1
gpgcheck=1
gpgkey=file:/etc/pki/rpm-gpg/RPM-GPG-KEY-mysql

</code></pre>
<p>​	4.使用yum安装mysql：</p>
<pre><code class="language-sh">[root@centos-linux Desktop]# yum install mysql-community-server
</code></pre>
<p>​	5.启动mysql服务：</p>
<pre><code class="language-shell">[root@centos-linux Desktop]# service mysqld start
</code></pre>
<p>​	查看root密码：</p>
<pre><code class="language-shell">[root@centos-linux Desktop]# # grep &quot;password&quot; /var/log/mysqld.log
2016-08-10T15:03:02.210317Z 1 [Note] A temporary password is generated for root@localhost: AYB(&amp;-3Cz-rW
</code></pre>
<p>​	现在必须立刻修改密码，不然会报错：</p>
<pre><code class="language-shell">ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.
</code></pre>
<p>​	修改密码（如果在此步报错ERROR 1819，请向下翻查看原因及解决方法）：</p>
<pre><code class="language-shell">mysql&gt; SET PASSWORD FOR 'root'@'localhost' = PASSWORD('newpass');
</code></pre>
<p>​	6.查看mysqld是否开机自启动，并设置为开机自启动：</p>
<pre><code>1 chkconfig --list | grep mysqld
2 chkconfig mysqld on
</code></pre>
<p>​	7.修改字符集为UTF-8：</p>
<pre><code class="language-shell">[root@centos-linux Desktop]# vim /etc/my.cnf

# [mysqld]添加
character-set-server=utf8
# [client]添加
default-character-set=utf8
</code></pre>
<p>​	修改好之后重启mysqld服务：</p>
<pre><code class="language-sh">[root@centos-linux Desktop]# service mysqld restart
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux安装 JDK]]></title>
        <id>https://Junmade.github.io/post/linux-an-zhuang-jdk</id>
        <link href="https://Junmade.github.io/post/linux-an-zhuang-jdk">
        </link>
        <updated>2019-05-29T01:40:48.000Z</updated>
        <content type="html"><![CDATA[<h5 id="1-安装-jdk">1. 安装 JDK</h5>
<ul>
<li>
<p>首先，需要去<a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">官网</a>下载 JDK，将 JDK安装包放入 Linux服务器中：</p>
<pre><code class="language-shell">scp ./jdk-8u201-linux-x64.tar root@39.96.55.184:/root/
</code></pre>
</li>
<li>
<p>解压安装包</p>
<pre><code class="language-shell">mdkri /usr/java
-- 解压
tar -xvf jdk-8u201-linux-x64.tar -C /usr/java/
</code></pre>
</li>
</ul>
<h5 id="2-设置环境变量">2. 设置环境变量</h5>
<pre><code class="language-shell">## 编辑 profile文件
vi /etc/profile

## 添加以下配置
export JAVA_HOME=/usr/java/jdk1.8.0_201   
export JRE_HOME=${JAVA_HOME}/jre
export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib
export  PATH=${JAVA_HOME}/bin:$PATH

## 执行 profile文件
source /etc/profile
</code></pre>
<h5 id="3-验证-jdk">3. 验证 JDK</h5>
<pre><code class="language-shell">java -version

## 显示
java version &quot;1.8.0_201&quot;
Java(TM) SE Runtime Environment (build 1.8.0_201-b09)
Java HotSpot(TM) 64-Bit Server VM (build 25.201-b09, mixed mode)
</code></pre>
]]></content>
    </entry>
</feed>